#include "MdApi.h"
#include <stdlib.h>
struct CThostFtdcMdSpiResponse* createSpiResponse(){
	struct CThostFtdcMdSpiResponse* ret = (struct CThostFtdcMdSpiResponse*)malloc(sizeof(struct CThostFtdcMdSpiResponse));
	ret->OnFrontConnected = GOOnFrontConnected;
	ret->OnFrontDisconnected = GOOnFrontDisconnected;
	ret->OnHeartBeatWarning = GOOnHeartBeatWarning;
	ret->OnRspUserLogin = GOOnRspUserLogin;
	ret->OnRspUserLogout = GOOnRspUserLogout;
	ret->OnRspError = GOOnRspError;
	ret->OnRspSubMarketData = GOOnRspSubMarketData;
	ret->OnRspUnSubMarketData = GOOnRspUnSubMarketData;
	ret->OnRspSubForQuoteRsp = GOOnRspSubForQuoteRsp;
	ret->OnRspUnSubForQuoteRsp = GOOnRspUnSubForQuoteRsp;
	ret->OnRtnDepthMarketData = GOOnRtnDepthMarketData;
	ret->OnRtnForQuoteRsp = GOOnRtnForQuoteRsp;
	return ret;
}

///当客户端与交易后台建立起通信连接时（还未登录前），该方法被调用。
void GOOnFrontConnected(){

}



	///当客户端与交易后台通信连接断开时，该方法被调用。当发生这个情况后，API会自动重新连接，客户端可不做处理。
	///@param nReason 错误原因
	///        0x1001 网络读失败
	///        0x1002 网络写失败
	///        0x2001 接收心跳超时
	///        0x2002 发送心跳失败
	///        0x2003 收到错误报文
void GOOnFrontDisconnected(int nReason){
    
}


	///心跳超时警告。当长时间未收到报文时，该方法被调用。
	///@param nTimeLapse 距离上次接收报文的时间
void GOOnHeartBeatWarning(int nTimeLapse){
    
}


///登录请求响应
void GOOnRspUserLogin(struct CThostFtdcRspUserLoginField *pRspUserLogin, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, int bIsLast){
    
}


	///登出请求响应
void GOOnRspUserLogout(struct CThostFtdcUserLogoutField *pUserLogout, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, int bIsLast){
    
}

	///错误应答
void GOOnRspError(struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, int bIsLast){
    
}


	///订阅行情应答
void GOOnRspSubMarketData(struct CThostFtdcSpecificInstrumentField *pSpecificInstrument, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, int bIsLast){
    
}

	///取消订阅行情应答
void GOOnRspUnSubMarketData(struct CThostFtdcSpecificInstrumentField *pSpecificInstrument, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, int bIsLast){
    
}

	///订阅询价应答
 void GOOnRspSubForQuoteRsp(struct CThostFtdcSpecificInstrumentField *pSpecificInstrument, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, int bIsLast){
    
}

	///取消订阅询价应答
void GOOnRspUnSubForQuoteRsp(struct CThostFtdcSpecificInstrumentField *pSpecificInstrument, struct CThostFtdcRspInfoField *pRspInfo, int nRequestID, int bIsLast){
    
}

	///深度行情通知
void GOOnRtnDepthMarketData(struct CThostFtdcDepthMarketDataField *pDepthMarketData){
    
}

	///询价通知
void GOOnRtnForQuoteRsp(struct CThostFtdcForQuoteRspField *pForQuoteRsp){
    
}